# Generated by Django 2.0.5 on 2018-05-20 08:31

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import shops.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Catagory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record created date and time.', verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Record last modified date and time', verbose_name='Modified date')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('description', models.TextField(blank=True, verbose_name='Short description')),
            ],
            options={
                'get_latest_by': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record created date and time.', verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Record last modified date and time', verbose_name='Modified date')),
                ('name', models.CharField(max_length=100)),
                ('icon', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
            ],
            options={
                'get_latest_by': ['updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record created date and time.', verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Record last modified date and time', verbose_name='Modified date')),
                ('color', models.CharField(blank=True, max_length=100)),
                ('size', models.CharField(blank=True, max_length=100)),
                ('stock', models.PositiveIntegerField(verbose_name='Available in stock')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record created date and time.', verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Record last modified date and time', verbose_name='Modified date')),
                ('order_date', models.DateTimeField()),
                ('is_delivered', models.BooleanField(default=False, verbose_name='Delivery status')),
                ('cutomer', models.ForeignKey(on_delete=models.SET(shops.models.get_deleted_user), related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('delivery_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='shops.DeliveryMethod')),
            ],
            options={
                'get_latest_by': ['-order_date'],
                'ordering': ['-order_date', 'is_delivered'],
            },
        ),
        migrations.CreateModel(
            name='OrderList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record created date and time.', verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Record last modified date and time', verbose_name='Modified date')),
                ('qty', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordered_lists', to='shops.Order')),
            ],
            options={
                'get_latest_by': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record created date and time.', verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Record last modified date and time', verbose_name='Modified date')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=8)),
                ('delivery_amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('tax', models.DecimalField(decimal_places=2, max_digits=6)),
                ('payment_date', models.DateTimeField()),
                ('is_payment_completed', models.BooleanField(default=False)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='shops.Order')),
            ],
            options={
                'get_latest_by': ['-updated_at'],
                'ordering': ['is_payment_completed', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record created date and time.', verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Record last modified date and time', verbose_name='Modified date')),
                ('name', models.CharField(max_length=100)),
                ('icon', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'get_latest_by': ['updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record created date and time.', verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Record last modified date and time', verbose_name='Modified date')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('description', models.TextField(blank=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('age', models.CharField(choices=[('A', 'Adults'), ('K', 'Kids')], max_length=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_on_sale', models.BooleanField(default=False, verbose_name='On sale')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('thumbnail', models.ImageField(upload_to='shops/products/')),
                ('publish', models.BooleanField(default=True, help_text='Publish product to the public')),
                ('catagory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shops.Catagory')),
            ],
            options={
                'get_latest_by': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record created date and time.', verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Record last modified date and time', verbose_name='Modified date')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='shops/products/pictures')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='shops.Product')),
            ],
            options={
                'get_latest_by': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record created date and time.', verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Record last modified date and time', verbose_name='Modified date')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('logo', models.ImageField(blank=True, null=True, upload_to='shops/logo/')),
                ('description', models.TextField(blank=True, verbose_name='Short description')),
            ],
            options={
                'get_latest_by': ['updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Record created date and time.', verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Record last modified date and time', verbose_name='Modified date')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='product',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shops.Shop'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='products', to='shops.Tag'),
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='shops.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='orderlist',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordered_lists', to='shops.Product'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='shops.Product'),
        ),
        migrations.AlterOrderWithRespectTo(
            name='productpicture',
            order_with_respect_to='product',
        ),
        migrations.AlterOrderWithRespectTo(
            name='product',
            order_with_respect_to='shop',
        ),
        migrations.AlterOrderWithRespectTo(
            name='orderlist',
            order_with_respect_to='order',
        ),
        migrations.AlterOrderWithRespectTo(
            name='inventory',
            order_with_respect_to='product',
        ),
    ]
